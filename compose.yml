version: "3.9"

services:
  web:
    image: odoo:15
    depends_on:
      - db
      - traefik
    command:
      - --unaccent
      - --workers=${WORKERS}
      - --proxy-mode
      - --db-filter=%d
      - --no-database-list
    volumes:
      - ./addons:/mnt/extra-addons
      - web_data:/var/lib/odoo
    labels:
      - traefik.enable=true
      - traefik.http.routers.odoo.rule=Host(`${HOST}`)
      - traefik.http.routers.odoo.service=odoo
      - traefik.http.services.odoo.loadbalancer.server.port=8069
      - traefik.http.routers.odoo.entrypoints=websecure
      - traefik.http.routers.odoo.tls=true
      - traefik.http.routers.chat.rule=Host(`${HOST}`) && (PathPrefix(`/longpolling`))
      - traefik.http.routers.chat.service=chat
      - traefik.http.services.chat.loadbalancer.server.port=8072
      - traefik.http.routers.chat.entrypoints=websecure
      - traefik.http.routers.chat.tls=true
      - traefik.http.routers.chat.middlewares=gzip,sslheader
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https
    restart: unless-stopped

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${ODOO_USER}
      POSTGRES_PASSWORD: ${ODOO_PASS}
      PGDATA: /var/lib/postgresql/data/pgdata
      PG_SYSTEM_SHARED_BUFFERS: ${PG_SHARED_BUFFERS}
      PG_SYSTEM_MAINTENANCE_WORK_MEM: ${PG_MAINTENANCE_WORK_MEM}
      PG_SYSTEM_WAL_BUFFERS: ${PG_WAL_BUFFERS}
      PG_SYSTEM_EFFECTIVE_CACHE_SIZE: ${PG_EFFECTIVE_CACHE_SIZE}
      PG_SYSTEM_WORK_MEM: ${PG_WORK_MEM}
      PG_SYSTEM_MAX_CONNECTIONS: ${PG_MAX_CONNECTIONS}
      PG_SYSTEM_DEFAULT_TEXT_SEARCH_CONFIG: ${PG_DEFAULT_TEXT_SEARCH_CONFIG}
      TZ: ${TZ}
      PGTZ: ${PGTZ}
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    restart: unless-stopped

  traefik:
    image: traefik:2.5
    command:
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs-traefik.yml:/etc/traefik/dynamic/certs-traefik.yml
      - ./certs:/etc/certs
    restart: unless-stopped

  py3o:
    image: xcgd/py3o:1.0.0
    depends_on:
      - web
    restart: unless-stopped

  adminer:
    image: adminer:4
    depends_on:
      - db
      - traefik
    environment:
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: "tables-filter tinymce"
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.service=adminer
      - traefik.http.routers.adminer.rule=Host(`${HOST}`) && (PathPrefix(`/adminer`))
      - traefik.http.routers.adminer.entrypoints=websecure
      - traefik.http.routers.adminer.tls=true
      - traefik.http.services.adminer.loadbalancer.server.port=8080
    restart: unless-stopped

volumes:
  web_data:
  db_data:
